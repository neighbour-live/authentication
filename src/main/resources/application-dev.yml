server:
#  ssl:
#    key-store: classpath:test.p12
#    key-store-type: PKCS12
#    key-store-password: test
#    enabled: true
  port: 8443

spring:
  datasource:
    driver-class-name:
    url: jdbc:mysql://nb-cluster-instance-1.ct5upsnvglvr.eu-central-1.rds.amazonaws.com:3306/users_schema
    username: admin
    password: a83Nn2suWdyVFn5I
    dbcp2:
      driver-class-name: com.mysql.jdbc.Driver

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
    properties:
      hibernate: org.hibernate.dialect.MySQL8Dialect
      storage_engine: innodb


  security:
    oauth2:
      client:
        registration:
          google:
            clientId: 488450560768-nr9o0rac9vk1nb17vrrmu08vvargf91b.apps.googleusercontent.com
            clientSecret: q92qvt2WDsjwShcfRaskul1u
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
          facebook:
            clientId: 1049023432348515
            clientSecret: d224eac6e099e2d0ea2aa902d3a40e22
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - public_profile
        provider:
          facebook:
            authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
            tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
            userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)

  mail:
    host: smtp.gmail.com
    port: 587
    username: afinitisami@gmail.com
    password: Testing1234$
    properties:
      mail:
        smtp:
          auth: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000
          ssl:
            trust: smtp.gmail.com
          starttls:
            enable: true
            required: true
  liquibase:
    url: jdbc:mysql://nb-cluster-instance-1.ct5upsnvglvr.eu-central-1.rds.amazonaws.com:3306/users_schema
    user: admin
    password: a83Nn2suWdyVFn5I
    enabled: true
    change-log: db-liquibase/liquibase-changeLog.xml
app:
  auth:
    tokenSecret: 926D270960DDC9429D0358DBBC51AC1B
    tokenExpirationMsec: 259200000
    refreshTokenExpirationMsec: 2592000000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect


email:
  redirection: https://ec2-35-156-85-34.eu-central-1.compute.amazonaws.com:8443
  api-key: ${SENDGRIDAPIKEY:test}
  from: social@neighbour.live
firebase:
  config: confidential/firebase-configuration.json
  database: https://neighbor-live.firebaseio.com


